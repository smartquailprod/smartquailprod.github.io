apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.qnodename }}
  namespace: {{ .Values.qnodenamespace }}
  labels:
    app: {{ .Values.qnodename }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.qnodename }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.qnodename }}
    spec:
      containers:
        - name: {{ .Values.qnodename }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"  # Asegurar que la política de pull esté entre comillas
          ports:
            - name: {{ .Values.qnodename }}
              containerPort: 9000
              protocol: TCP
          env:
            - name: PORT
              value: "9000"
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SETTINGS_MODULE
            - name: IP
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: IP
            - name: DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DOMAIN
            - name: HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: HOSTNAME
            - name: DJANGO_SUPERUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SUPERUSER_USERNAME
            - name: DJANGO_SUPERUSER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SUPERUSER_EMAIL
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: PGADMIN_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_HOST
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_ENGINE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_ENGINE
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: POSTGRES_PORT
            - name: LANG
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: LANG
            - name: LC_COLLATE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: LC_COLLATE
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: REDIS_PORT
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: RABBITMQ_DEFAULT_USER
            - name: AWS_STORAGE_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: AWS_STORAGE_BUCKET_NAME
            - name: AWS_S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: AWS_S3_ENDPOINT_URL
            - name: AWS_LOCATION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: AWS_LOCATION
            - name: STATICFILES_STORAGE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: STATICFILES_STORAGE
            - name: MEDIA_STORAGE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: MEDIA_STORAGE
            - name: BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: BROKER_URL
            - name: RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: RESULT_BACKEND
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: CELERY_RESULT_BACKEND
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: CELERY_BROKER_URL
            - name: EMAIL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_HOST
            - name: EMAIL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_PORT
            - name: EMAIL_USE_TLS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_USE_TLS
            - name: EMAIL_HOST_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_HOST_USER
            - name: DEFAULT_FROM_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DEFAULT_FROM_EMAIL
            - name: EMAIL_BACKEND
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_BACKEND
            - name: EMAIL_USE_SSL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_USE_SSL
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SECRET_KEY
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SUPERUSER_PASSWORD
            - name: DJANGO_SUPERUSER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: DJANGO_SUPERUSER_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: RABBITMQ_DEFAULT_PASS
            - name: SOCIAL_AUTH_FACEBOOK_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_FACEBOOK_KEY
            - name: SOCIAL_AUTH_FACEBOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_FACEBOOK_SECRET
            - name: SOCIAL_AUTH_FACEBOOK_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_FACEBOOK_SCOPE
            - name: SOCIAL_AUTH_TWITTER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_TWITTER_KEY
            - name: SOCIAL_AUTH_TWITTER_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_TWITTER_SECRET
            - name: SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
            - name: SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
            - name: GA_KEY_CONTENT_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: GA_KEY_CONTENT_ENV
            - name: GA_VIEW_ID_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: GA_VIEW_ID_ENV
            - name: BRAINTREE_M_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: BRAINTREE_M_ID
            - name: BRAINTREE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: BRAINTREE_KEY
            - name: BRAINTREE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: BRAINTREE_PRIVATE_KEY
            - name: EMAIL_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qnodename }}-app-secrets
                  key: EMAIL_HOST_PASSWORD

          resources:
            requests:
              cpu: "600m"          # 500 milicores de CPU
              memory: "256Mi"      # 256 MiB de memoria
            limits:
              cpu: "1000m"          # 900 milicores de CPU
              memory: "512Mi"      # 512 MiB de memoria

          livenessProbe:
            httpGet:
              path: /health/
              port: 9000
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health/
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
