apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: brk-srv
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672  # Puerto de RabbitMQ para la comunicación
        - containerPort: 15672  # Puerto de la interfaz de administración de RabbitMQ
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq  # Volumen persistente de RabbitMQ
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_DEFAULT_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_DEFAULT_PASS
        - name: RABBITMQ_DEFAULT_VHOST
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_DEFAULT_VHOST
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_ERLANG_COOKIE
        - name: RABBITMQ_MANAGEMENT_PLUGIN
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_MANAGEMENT_PLUGIN
        - name: RABBITMQ_MANAGEMENT_PORT
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_MANAGEMENT_PORT
        - name: RABBITMQ_TCP_LISTENER_PORT
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_TCP_LISTENER_PORT
        - name: RABBITMQ_SSL_LISTENER_PORT
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: RABBITMQ_SSL_LISTENER_PORT

        # 🩺 Healthchecks
        livenessProbe:
          exec:
            command:
              - rabbitmq-diagnostics
              - check_port_connectivity
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          exec:
            command:
              - rabbitmq-diagnostics
              - check_local_alarms
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3

      - name: fluentd
        image: fluent/fluentd:v1.14-1  # Imagen de Fluentd para enviar logs
        ports:
        - containerPort: 24224  # Puerto de Fluentd para la recolección de logs
        env:
        - name: FLUENTD_ELASTICSEARCH_HOST
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: FLUENTD_ELASTICSEARCH_HOST
        - name: FLUENTD_ELASTICSEARCH_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: FLUENTD_ELASTICSEARCH_USER
        - name: FLUENTD_ELASTICSEARCH_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: FLUENTD_ELASTICSEARCH_PASS
        volumeMounts:
        - name: fluentd-config
          mountPath: /fluentd/etc
        - name: fluentd-logs
          mountPath: /fluentd/log  # Directorio temporal para los logs recolectados

      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc  # PVC para el volumen persistente de RabbitMQ
      - name: fluentd-config
        configMap:
          name: fluentd-config  # Configuración de Fluentd (ConfigMap)
      - name: fluentd-logs
        emptyDir: {}  # Directorio temporal para los logs


