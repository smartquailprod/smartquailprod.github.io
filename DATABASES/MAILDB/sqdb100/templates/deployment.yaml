apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres_name }}
  namespace: {{ .Values.postgres_namespace }}
  labels:
    app: {{ .Values.postgres_name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgres_name }}
  template:
    metadata:
      namespace: {{ .Values.postgres_namespace }}
      labels:
        app: {{ .Values.postgres_name }}
    spec:
      nodeSelector:
        role: {{ .Values.nodeRole }}  # AÃ±adido nodeSelector
      restartPolicy: Always
      containers:
        - name: {{ .Values.postgres_name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Values.postgres_helm_name }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres_secrets_name }}
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
      volumes:
        - name: {{ .Values.postgres_name }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgres_helm_name }}-pv-claim
